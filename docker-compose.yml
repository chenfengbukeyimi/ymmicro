volumes:
  ## 开发环境
  config-db-dev-data:
  log-db-dev-data:
  auth-db-dev-data:
  user-db-dev-data:
  owner-admin-db-dev-data:

  ## 生产环境
  config-db-prod-data:
  log-db-prod-data:
  auth-db-prod-data:
  user-db-prod-data:
  owner-admin-db-prod-data:

services:
  ## 数据库服务
  ### 开发环境（72xx-73**）
  config-db-dev:
    image: mysql:8
    container_name: config-db-dev
    ports:
      - '7201:3306'
    environment:
      - MYSQL_DATABASE=config_db_dev
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - config-db-dev-data:/var/lib/mysql

  log-db-dev:
    image: mysql:8
    container_name: log-db-dev
    ports:
      - '8202:3306'
    environment:
      - MYSQL_DATABASE=log_db_dev
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - log-db-dev-data:/var/lib/mysql

  auth-db-dev:
    image: mysql:8
    container_name: auth-db-dev
    ports:
      - '7203:3306'
    environment:
      - MYSQL_DATABASE=auth_db_dev
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - auth-db-dev-data:/var/lib/mysql

  user-db-dev:
    image: mysql:8
    container_name: user-db-dev
    ports:
      - '7204:3306'
    environment:
      - MYSQL_DATABASE=user_db_dev
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - user-db-dev-data:/var/lib/mysql

  owner-admin-db-dev:
    image: mysql:8
    container_name: owner-admin-db-dev
    ports:
      - '7205:3306'
    environment:
      - MYSQL_DATABASE=owner_admin_db_dev
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - owner-admin-db-dev-data:/var/lib/mysql

  ### 生产环境（82xx-83**）
  config-db-prod:
    image: mysql:8
    container_name: config-db-prod
    ports:
      - '8201:3306'
    environment:
      - MYSQL_DATABASE=config_db_prod
      - MYSQL_ROOT_PASSWORD=xiaoyimi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - config-db-prod-data:/var/lib/mysql

  log-db-prod:
    image: mysql:8
    container_name: log-db-prod
    ports:
      - '8202:3306'
    environment:
      - MYSQL_DATABASE=log_db_prod
      - MYSQL_ROOT_PASSWORD=xiaoyimi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - log-db-prod-data:/var/lib/mysql

  auth-db-prod:
    image: mysql:8
    container_name: auth-db-prod
    ports:
      - '8203:3306'
    environment:
      - MYSQL_DATABASE=auth_db_prod
      - MYSQL_ROOT_PASSWORD=xiaoyimi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - auth-db-prod-data:/var/lib/mysql

  user-db-prod:
    image: mysql:8
    container_name: user-db-prod
    ports:
      - '8204:3306'
    environment:
      - MYSQL_DATABASE=user_db_prod
      - MYSQL_ROOT_PASSWORD=xiaoyimi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - user-db-prod-data:/var/lib/mysql

  owner-admin-db-prod:
    image: mysql:8
    container_name: owner-admin-db-prod
    ports:
      - '8205:3306'
    environment:
      - MYSQL_DATABASE=owner_admin_db_prod
      - MYSQL_ROOT_PASSWORD=xiaoyimi
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    volumes:
      - owner-admin-db-prod-data:/var/lib/mysql

  ## 微服务服务（端口网段：8000-8999）
  ### 开发环境（70xx-71**）
  ymmicro-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=ymmicro
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7000:3000'
    command: 'pnpm run start:dev -- ymmicro'

  micro-config-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=micro-config
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7001:3001'
    depends_on:
      - config-db-dev
    command: 'pnpm run start:dev -- micro-config'

  micro-log-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=micro-log
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7002:3002'
    depends_on:
      - log-db-dev
    command: 'pnpm run start:dev -- micro-log'

  micro-auth-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=micro-auth
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7003:3003'
    depends_on:
      - auth-db-dev
    command: 'pnpm run start:dev -- micro-auth'

  micro-user-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=micro-user
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7004:3004'
    depends_on:
      - user-db-dev
    command: 'pnpm run start:dev -- micro-user'

  owner-admin-dev:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - APP_NAME=owner-admin
    volumes:
      - .:/usr/src/ymmicro
      - /usr/src/ymmicro/node_modules
    ports:
      - '7005:3005'
    depends_on:
      - owner-admin-db-dev
    command: 'pnpm run start:dev -- owner-admin'

  ### 生产环境（80xx-81**）
  ymmicro-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      target: production
      dockerfile: Dockerfile
      args:
        - APP_NAME=ymmicro
    ports:
      - '8000:3000'

  micro-config-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      target: production
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-config
    ports:
      - '8001:3001'
    depends_on:
      - config-db-prod

  micro-log-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      target: production
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-log
    ports:
      - '8002:3002'
    depends_on:
      - log-db-prod

  micro-auth-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      target: production
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-auth
    ports:
      - '8003:3003'
    depends_on:
      - auth-db-prod

  micro-user-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - APP_NAME=micro-user
    ports:
      - '8004:3004'
    depends_on:
      - user-db-prod

  owner-admin-prod:
    environment:
      - NODE_ENV=production
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - APP_NAME=owner-admin
    ports:
      - '8005:3005'
    depends_on:
      - owner-admin-db-prod
